@Library('pipeline-library@pull/853/head') _

def cronExpr = env.BRANCH_IS_PRIMARY ? '@hourly' : ''
def reportsFolder = 'plugin-health-scoring'
def reportFile = env.BRANCH_IS_PRIMARY ? 'scores.json' : "scores-${env.BRANCH_NAME}.json"
def reportLines = 0

pipeline {
  agent {
    label 'jnlp-linux-arm64'
  }

  environment {
    REPORTS_FOLDER = "${reportsFolder}"
    REPORT_FILE = "${reportFile}"
    PHS_API_URL = 'https://plugin-health.jenkins.io/api/scores'
  }

  options {
    buildDiscarder logRotator(daysToKeepStr: '90')
    lock(resource: 'plugin-health-scoring', inversePrecedence: true)
    timeout(time: 5, unit: 'MINUTES')
    disableConcurrentBuilds()
  }

  triggers {
    cron( cronExpr )
  }

  stages {
    stage('Generate Report') {
      steps {
        dir('plugin-health-scoring') {
          sh 'bash fetch-report.sh'
          archiveArtifacts reportFile
        }
      }
    }

    stage('Publish if report not empty') {
      when {
          environment name: 'BRANCH_IS_PRIMARY', value: true
      }
      steps {
        if (reportLines > 0) {
          publishReports([ "${reportsFolder}/${reportFile}" ], [failIfEmpty: true])
        }
      }
    }
  }
}
